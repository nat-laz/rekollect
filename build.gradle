plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jakarta.validation:jakarta.validation-api'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //  Elasticsearch
    implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

    // Jackson JSON Processor
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // jUnit
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.1'
    testImplementation('com.h2database:h2')
}


tasks.named('test') {
    useJUnitPlatform()
    doFirst {
        def mockitoAgent = configurations.testRuntimeClasspath.files.find { it.name.contains("mockito-core") }
        if (mockitoAgent) {
            jvmArgs "-javaagent:" + mockitoAgent.absolutePath
        }
        jvmArgs "-Xshare:off" // Disables class data sharing to prevent warning
    }
}